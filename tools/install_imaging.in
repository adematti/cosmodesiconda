#!/bin/bash

# Script directory

pushd $(dirname $0) > /dev/null
topdir=$(pwd)
popd > /dev/null
scriptname=$(basename $0)
fullscript="${topdir}/${scriptname}"

# Initialize environment

if [ -e "${topdir}/@CONFFILE@.sh" ]; then
    source "${topdir}/@CONFFILE@.sh"
fi

# Install DESI dependencies from source.

mkdir -p @CONDA_PREFIX@/bin
mkdir -p @CONDA_PREFIX@/lib
mkdir -p @AUX_PREFIX@/include
mkdir -p @AUX_PREFIX@/lib/python@PYVERSION@/site-packages
pushd @AUX_PREFIX@
if [ ! -e lib64 ]; then
    ln -s lib lib64
fi
popd > /dev/null

export PATH=@AUX_PREFIX@/bin:@CONDA_PREFIX@/bin:${PATH}
export CPATH=@AUX_PREFIX@/include:${CPATH}
export LIBRARY_PATH=@AUX_PREFIX@/lib:${LIBRARY_PATH}
export LD_LIBRARY_PATH=@AUX_PREFIX@/lib:${LD_LIBRARY_PATH}
export PYTHONPATH=@AUX_PREFIX@/lib/python@PYVERSION@/site-packages
export PKG_CONFIG_PATH=@AUX_PREFIX@/lib/pkgconfig:${PKG_CONFIG_PATH}
export PKG_CONFIG_PATH=@AUX_PREFIX@/share/pkgconfig:${PKG_CONFIG_PATH}

export ACCEPT_INTEL_PYTHON_EULA=yes
unset SUDO_USER SUDO_GID SUDO_UID SUDO_COMMAND

# Install conda root environment

@conda_root@

if [ "x@INTEL_CONDA@" = "xyes" ]; then
@conda_intel@
fi

# Install conda packages.

@conda_pkgs@

conda list --export | grep -v conda > "@CONDA_PREFIX@/pkg_list.txt"

# Install pip packages.

@pip_pkgs@

# Copy patches

if [ ! -e ./conf ]; then
    # this is an out-of-source build, copy patches
    rm -rf ./rules
    mkdir ./rules
    cp ${topdir}/rules/patch_* ./rules/
fi

# Autotools

@m4@

@libtool@

@autoconf@

@automake@

# MPICH if needed

if [ "x@BUILD_MPI@" = "xyes" ]; then
@mpich@
fi

# Install mpi4py.

@mpi4py@

# Install CFITSIO.

@cfitsio@

@fitsverify@

# Install OpenBLAS

if [ "x@INTEL_COMP@" != "xyes" ]; then
@openblas@
fi

# Install FFTW.

@fftw@

# Install BOOST.

@boost@

# GalSim and dependencies

@scons@

@tmv@

@galsim@

# Image libraries needed by astrometry

@bzip2@

@libz@

@libpng@

@libjpeg@

@libtiff@

# wcslib

@wcslib@

# pcre

@pcre@

# swig

@swig@

# ceres

@metis@

@glog@

@eigen@

@suitesparse@

@ceres@

# astrometry.net
# This package and tractor install python tools to a "lib/python"
# directory rather than site-packages.  Make a symlink here.

ln -s "@AUX_PREFIX@/lib/python@PYVERSION@/site-packages" "@AUX_PREFIX@/lib/python"

@astrometry_net@

# tractor

@tractor@

# Astromatic toolkit pieces

@sextractor@

@psfex@

@cdsclient@

@scamp@

@swarp@

# Remove patches if needed

if [ ! -e ./conf ]; then
    # this is an out-of-source build
    rm -rf ./rules
fi

# Compile python modules

python@PYVERSION@ -m compileall -f "@CONDA_PREFIX@/lib/python@PYVERSION@/site-packages"
python@PYVERSION@ -m compileall -f "@AUX_PREFIX@"

# Import packages that may need to generate files in the
# install prefix

python@PYVERSION@ -c "import astropy"
python@PYVERSION@ -c "import matplotlib.font_manager as fm; f = fm.FontManager"

# Set permissions

if [ "x@CHGRP@" != "x" ]; then
    chgrp -R @CHGRP@ "@AUX_PREFIX@"
    chgrp -R @CHGRP@ "@CONDA_PREFIX@"
fi

if [ "x@CHMOD@" != "x" ]; then
    chmod -R @CHMOD@ "@AUX_PREFIX@"
    chmod -R @CHMOD@ "@CONDA_PREFIX@"
fi

# Install modulefile

if [ "x@MODULE_DIR@" != "x" ]; then
    mkdir -p "@MODULE_DIR@"
    cp "${fullscript}.module" "@MODULE_DIR@/@VERSION@"
    cp "${fullscript}.modversion" "@MODULE_DIR@/.version_@VERSION@"

    if [ "x@CHGRP@" != "x" ]; then
        chgrp -R @CHGRP@ "@MODULE_DIR@"
    fi
    if [ "x@CHMOD@" != "x" ]; then
        chmod -R @CHMOD@ "@MODULE_DIR@"
    fi
fi

# Install plain shell setup (if modules are not used)

setupfile="@CONDA_PREFIX@/../setup_desiconda.sh"
echo "# Load desiconda into the environment" > ${setupfile}
echo "export PATH=@AUX_PREFIX@/bin:@CONDA_PREFIX@/bin:\${PATH}" >> ${setupfile}
echo "export CPATH=@AUX_PREFIX@/include:\${CPATH}" >> ${setupfile}
echo "export LIBRARY_PATH=@AUX_PREFIX@/lib:\${LIBRARY_PATH}" >> ${setupfile}
echo "export LD_LIBRARY_PATH=@AUX_PREFIX@/lib:\${LD_LIBRARY_PATH}" >> ${setupfile}
echo "export PYTHONPATH=@AUX_PREFIX@/lib/python@PYVERSION@/site-packages" >> ${setupfile}
echo "export PKG_CONFIG_PATH=@AUX_PREFIX@/lib/pkgconfig:\${PKG_CONFIG_PATH}" >> ${setupfile}
echo "export PKG_CONFIG_PATH=@AUX_PREFIX@/share/pkgconfig:\${PKG_CONFIG_PATH}" >> ${setupfile}
echo "" >> ${setupfile}
