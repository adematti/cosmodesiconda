#!/bin/bash

echo Starting desiconda installation at $(date)

# print commands as they are run so we know where we are if something fails
set -x

# Script directory

pushd $(dirname $0) > /dev/null
topdir=$(pwd)
popd > /dev/null
scriptname=$(basename $0)
fullscript="${topdir}/${scriptname}"

# Initialize environment

if [ -e "${topdir}/@CONFFILE@.sh" ]; then
    source "${topdir}/@CONFFILE@.sh"
fi

# Install DESI dependencies from source.

mkdir -p @CONDA_PREFIX@/bin
mkdir -p @CONDA_PREFIX@/lib
mkdir -p @AUX_PREFIX@/include
mkdir -p @AUX_PREFIX@/lib/python@PYVERSION@/site-packages
pushd @AUX_PREFIX@
if [ ! -e lib64 ]; then
    ln -s lib lib64
fi
popd > /dev/null

export PATH=@AUX_PREFIX@/bin:@CONDA_PREFIX@/bin:${PATH}
export CPATH=@AUX_PREFIX@/include:${CPATH}
export LIBRARY_PATH=@AUX_PREFIX@/lib:${LIBRARY_PATH}
export LD_LIBRARY_PATH=@AUX_PREFIX@/lib:${LD_LIBRARY_PATH}
export PYTHONPATH=@AUX_PREFIX@/lib/python@PYVERSION@/site-packages
export PKG_CONFIG_PATH=@AUX_PREFIX@/lib/pkgconfig:${PKG_CONFIG_PATH}
export PKG_CONFIG_PATH=@AUX_PREFIX@/share/pkgconfig:${PKG_CONFIG_PATH}

export ACCEPT_INTEL_PYTHON_EULA=yes
unset SUDO_USER SUDO_GID SUDO_UID SUDO_COMMAND

# Install conda root environment

echo Installing conda root environment at $(date)

@conda_root@

if [ "x@INTEL_CONDA@" = "xyes" ]; then
@conda_intel@
fi

# Install conda packages.

echo Installing conda packages at $(date)

@conda_pkgs@

if [ $? != 0 ]; then
    echo "ERROR installing conda packages; exiting"
    exit 1
fi

conda list --export | grep -v conda > "@CONDA_PREFIX@/pkg_list.txt"

# Install pip packages.

echo Installing pip packages at $(date)

@pip_pkgs@

if [ $? != 0 ]; then
    echo "ERROR installing pip packages; exiting"
    exit 1
fi

# Copy patches

if [ ! -e ./conf ]; then
    # this is an out-of-source build, copy patches
    rm -rf ./rules
    mkdir ./rules
    cp ${topdir}/rules/patch_* ./rules/
fi

# Autotools

echo Installing autotools at $(date)

@m4@

@libtool@

@autoconf@

@automake@

# MPICH if needed

if [ "x@BUILD_MPI@" = "xyes" ]; then
echo Installing mpich at $(date)
@mpich@
fi

# Install mpi4py.

echo Installing mpi4py at $(date)

@mpi4py@

# Install CFITSIO.

echo Installing cfitsio at $(date)

@cfitsio@

echo Installing fitsverify at $(date)

@fitsverify@

# Install OpenBLAS

if [ "x@INTEL_COMP@" != "xyes" ]; then
echo Installing OpenBLAS at $(date)

@openblas@
fi

# Install FFTW.

echo Installing FFTW at $(date)

@fftw@

# Install BOOST.

### echo Installing BOOST at $(date)

### @boost@

# Install HARP.

### echo Installing HARP at $(date)

### @harp@

# Install PyMPIT for environment testing

echo Installing PyMPIT at $(date)

@pympit@

# GalSim and dependencies

### echo Installing GalSim and friends at $(date)

### @scons@

### @tmv@

### @galsim@

# Remove patches if needed

if [ ! -e ./conf ]; then
    # this is an out-of-source build
    rm -rf ./rules
fi

# Compile python modules

echo Pre-compiling python modules at $(date)

python@PYVERSION@ -m compileall -f "@CONDA_PREFIX@/lib/python@PYVERSION@/site-packages"
python@PYVERSION@ -m compileall -f "@AUX_PREFIX@"

# Import packages that may need to generate files in the
# install prefix

echo Import python modules that might trigger downloads at $(date)

python@PYVERSION@ -c "import astropy"
python@PYVERSION@ -c "import matplotlib.font_manager as fm; f = fm.FontManager"

# Set permissions

echo Setting permissions at $(date)

if [ "x@CHGRP@" != "x" ]; then
    chgrp -R @CHGRP@ "@AUX_PREFIX@"
    chgrp -R @CHGRP@ "@CONDA_PREFIX@"
fi

if [ "x@CHMOD@" != "x" ]; then
    chmod -R @CHMOD@ "@AUX_PREFIX@"
    chmod -R @CHMOD@ "@CONDA_PREFIX@"
fi

# Install modulefile

echo Installing the desiconda modulefile at $(date)

if [ "x@MODULE_DIR@" != "x" ]; then
    mkdir -p "@MODULE_DIR@"
    cp "${fullscript}.module" "@MODULE_DIR@/@VERSION@"
    cp "${fullscript}.modversion" "@MODULE_DIR@/.version_@VERSION@"

    if [ "x@CHGRP@" != "x" ]; then
        chgrp -R @CHGRP@ "@MODULE_DIR@"
    fi
    if [ "x@CHMOD@" != "x" ]; then
        chmod -R @CHMOD@ "@MODULE_DIR@"
    fi
fi

# Install plain shell setup (if modules are not used)

setupfile="@CONDA_PREFIX@/../setup_desiconda.sh"
echo "# Load desiconda into the environment" > ${setupfile}
echo "export PATH=@AUX_PREFIX@/bin:@CONDA_PREFIX@/bin:\${PATH}" >> ${setupfile}
echo "export CPATH=@AUX_PREFIX@/include:\${CPATH}" >> ${setupfile}
echo "export LIBRARY_PATH=@AUX_PREFIX@/lib:\${LIBRARY_PATH}" >> ${setupfile}
echo "export LD_LIBRARY_PATH=@AUX_PREFIX@/lib:\${LD_LIBRARY_PATH}" >> ${setupfile}
echo "export PYTHONPATH=@AUX_PREFIX@/lib/python@PYVERSION@/site-packages" >> ${setupfile}
echo "export PKG_CONFIG_PATH=@AUX_PREFIX@/lib/pkgconfig:\${PKG_CONFIG_PATH}" >> ${setupfile}
echo "export PKG_CONFIG_PATH=@AUX_PREFIX@/share/pkgconfig:\${PKG_CONFIG_PATH}" >> ${setupfile}
echo "" >> ${setupfile}

# All done

echo Done at $(date)
